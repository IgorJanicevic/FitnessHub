{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"background-image\"\n};\nconst _hoisted_2 = {\n  class: \"form-container\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Forma\", -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Plan Treninga\", -1 /* HOISTED */);\nconst _hoisted_8 = [_hoisted_7];\nconst _hoisted_9 = {\n  key: 0\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = {\n  class: \"labela\",\n  for: \"age\"\n};\nconst _hoisted_12 = {\n  class: \"form-group\"\n};\nconst _hoisted_13 = {\n  for: \"weight\"\n};\nconst _hoisted_14 = {\n  class: \"form-group\"\n};\nconst _hoisted_15 = {\n  for: \"height\"\n};\nconst _hoisted_16 = {\n  class: \"form-group\"\n};\nconst _hoisted_17 = {\n  for: \"gender\"\n};\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"muski\"\n}, \"Muski\", -1 /* HOISTED */);\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"zenski\"\n}, \"Zenski\", -1 /* HOISTED */);\nconst _hoisted_20 = [_hoisted_18, _hoisted_19];\nconst _hoisted_21 = {\n  class: \"form-group\"\n};\nconst _hoisted_22 = {\n  for: \"fitnessLevel\"\n};\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"početnik\"\n}, \"Početnik (0-1 godine aktivnog treniranja)\", -1 /* HOISTED */);\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"srednji\"\n}, \"Srednji (2-5 godine aktivnog treninga)\", -1 /* HOISTED */);\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"napredni\"\n}, \"Napredni (5+ godina aktivnog treniranja)\", -1 /* HOISTED */);\nconst _hoisted_26 = [_hoisted_23, _hoisted_24, _hoisted_25];\nconst _hoisted_27 = {\n  key: 1\n};\nconst _hoisted_28 = {\n  class: \"form-group\"\n};\nconst _hoisted_29 = {\n  for: \"goals\"\n};\nconst _hoisted_30 = {\n  class: \"form-group\"\n};\nconst _hoisted_31 = {\n  for: \"trainingFrequency\"\n};\nconst _hoisted_32 = {\n  class: \"form-group\"\n};\nconst _hoisted_33 = {\n  for: \"trainingDuration\"\n};\nconst _hoisted_34 = {\n  class: \"form-group\"\n};\nconst _hoisted_35 = {\n  for: \"trainingPreference\"\n};\nconst _hoisted_36 = {\n  class: \"form-group\"\n};\nconst _hoisted_37 = {\n  for: \"favoriteExercises\"\n};\nconst _hoisted_38 = {\n  class: \"form-group\"\n};\nconst _hoisted_39 = {\n  for: \"dislikedExercises\"\n};\nconst _hoisted_40 = {\n  key: 2\n};\nconst _hoisted_41 = {\n  class: \"form-group\"\n};\nconst _hoisted_42 = {\n  for: \"injuries\"\n};\nconst _hoisted_43 = {\n  class: \"form-group\"\n};\nconst _hoisted_44 = {\n  for: \"favoriteBodyParts\"\n};\nconst _hoisted_45 = {\n  class: \"form-group\"\n};\nconst _hoisted_46 = {\n  for: \"includeCardio\"\n};\nconst _hoisted_47 = {\n  class: \"form-group\"\n};\nconst _hoisted_48 = {\n  for: \"otherFactors\"\n};\nconst _hoisted_49 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Pošalji\", -1 /* HOISTED */);\nconst _hoisted_50 = {\n  key: 2\n};\nconst _hoisted_51 = {\n  style: {\n    'white-space': 'pre-line'\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$setup.currentStep === 1 || $setup.currentStep === 2 || $setup.currentStep === 3 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [..._hoisted_5])) : _createCommentVNode(\"v-if\", true), $setup.currentStep === 4 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [..._hoisted_8])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.handleSubmit, [\"prevent\"])\n  }, [_createCommentVNode(\" Prva faza pitanja \"), $setup.currentStep === 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"label\", _hoisted_11, _toDisplayString($setup.godinePitanje), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"age\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.age = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.age]])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"label\", _hoisted_13, _toDisplayString($setup.weightPitanje), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"weight\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.weight = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.weight]])]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"label\", _hoisted_15, _toDisplayString($setup.heightPitanje), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"height\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.height = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.height]])]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"label\", _hoisted_17, _toDisplayString($setup.genderPitanje), 1 /* TEXT */), _withDirectives(_createElementVNode(\"select\", {\n    id: \"gender\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.gender = $event),\n    required: \"\"\n  }, [..._hoisted_20], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.form.gender]])]), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"label\", _hoisted_22, _toDisplayString($setup.fitnessLevelPitanje), 1 /* TEXT */), _withDirectives(_createElementVNode(\"select\", {\n    id: \"fitnessLevel\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.form.fitnessLevel = $event),\n    required: \"\"\n  }, [..._hoisted_26], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.form.fitnessLevel]])]), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: $setup.nextStep\n  }, \"Dalje\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Druga faza pitanja \"), $setup.currentStep === 2 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [_createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"label\", _hoisted_29, _toDisplayString($setup.goalsPitanje), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"goals\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.form.goals = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.goals]])]), _createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"label\", _hoisted_31, _toDisplayString($setup.trainingFrequencyPitanje), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"trainingFrequency\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.form.trainingFrequency = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.trainingFrequency]])]), _createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"label\", _hoisted_33, _toDisplayString($setup.trainingDurationPitanje), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"range\",\n    id: \"trainingDuration\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.form.trainingDuration = $event),\n    min: \"30\",\n    max: \"180\",\n    step: \"10\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.trainingDuration]]), _createElementVNode(\"span\", null, _toDisplayString($setup.form.trainingDuration) + \" minuta\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_34, [_createElementVNode(\"label\", _hoisted_35, _toDisplayString($setup.trainingPreferencePitanje), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"trainingPreference\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.form.trainingPreference = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.trainingPreference]])]), _createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"label\", _hoisted_37, _toDisplayString($setup.favoriteExercisesPitanje), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"favoriteExercises\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.form.favoriteExercises = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.favoriteExercises]])]), _createElementVNode(\"div\", _hoisted_38, [_createElementVNode(\"label\", _hoisted_39, _toDisplayString($setup.dislikedExercisesPitanje), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"dislikedExercises\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.form.dislikedExercises = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.dislikedExercises]])]), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: $setup.nextStep\n  }, \"Dalje\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Treća faza pitanja \"), $setup.currentStep === 3 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_40, [_createElementVNode(\"div\", _hoisted_41, [_createElementVNode(\"label\", _hoisted_42, _toDisplayString($setup.injuriesPitanje), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"injuries\",\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $setup.form.injuries = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.injuries]])]), _createElementVNode(\"div\", _hoisted_43, [_createElementVNode(\"label\", _hoisted_44, _toDisplayString($setup.favoriteBodyPartsPitanje), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"favoriteBodyParts\",\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $setup.form.favoriteBodyParts = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.favoriteBodyParts]])]), _createElementVNode(\"div\", _hoisted_45, [_createElementVNode(\"label\", _hoisted_46, _toDisplayString($setup.includeCardioPitanje), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"includeCardio\",\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $setup.form.includeCardio = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.includeCardio]])]), _createElementVNode(\"div\", _hoisted_47, [_createElementVNode(\"label\", _hoisted_48, _toDisplayString($setup.otherFactorsPitanje), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"otherFactors\",\n    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $setup.form.otherFactors = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.otherFactors]])]), _hoisted_49])) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */), $setup.currentStep === 4 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_50, [_createElementVNode(\"div\", null, [_createElementVNode(\"p\", _hoisted_51, _toDisplayString($setup.plan), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_hoisted_4","_hoisted_7","for","value","_hoisted_18","_hoisted_19","_hoisted_23","_hoisted_24","_hoisted_25","type","style","_createElementBlock","_hoisted_1","_hoisted_2","$setup","currentStep","_hoisted_3","_hoisted_5","_createCommentVNode","_hoisted_6","_hoisted_8","onSubmit","_withModifiers","handleSubmit","_hoisted_9","_hoisted_10","_hoisted_11","_toDisplayString","godinePitanje","id","_cache","$event","form","age","required","_hoisted_12","_hoisted_13","weightPitanje","weight","_hoisted_14","_hoisted_15","heightPitanje","height","_hoisted_16","_hoisted_17","genderPitanje","gender","_hoisted_20","_hoisted_21","_hoisted_22","fitnessLevelPitanje","fitnessLevel","_hoisted_26","onClick","nextStep","_hoisted_27","_hoisted_28","_hoisted_29","goalsPitanje","goals","_hoisted_30","_hoisted_31","trainingFrequencyPitanje","trainingFrequency","_hoisted_32","_hoisted_33","trainingDurationPitanje","trainingDuration","min","max","step","_hoisted_34","_hoisted_35","trainingPreferencePitanje","trainingPreference","_hoisted_36","_hoisted_37","favoriteExercisesPitanje","favoriteExercises","_hoisted_38","_hoisted_39","dislikedExercisesPitanje","dislikedExercises","_hoisted_40","_hoisted_41","_hoisted_42","injuriesPitanje","injuries","_hoisted_43","_hoisted_44","favoriteBodyPartsPitanje","favoriteBodyParts","_hoisted_45","_hoisted_46","includeCardioPitanje","includeCardio","_hoisted_47","_hoisted_48","otherFactorsPitanje","otherFactors","_hoisted_49","_hoisted_50","_hoisted_51","plan"],"sources":["C:\\Users\\DELL\\Documents\\FitnessHub\\FitnessHub\\Frontend\\front-appZ\\front-app\\src\\components\\CreateWorkoutAI.vue"],"sourcesContent":["<template> \r\n  <div class=\"background-image\">\r\n    <div class=\"form-container\">\r\n      <div v-if=\"currentStep === 1 || currentStep === 2 || currentStep === 3\">\r\n        <h2>Forma</h2>\r\n      </div>\r\n      <div v-if=\"currentStep === 4\">\r\n        <h2>Plan Treninga</h2>\r\n      </div>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <!-- Prva faza pitanja -->\r\n      <div v-if=\"currentStep === 1\">\r\n        <div class=\"form-group\">\r\n          <label class=\"labela\" for=\"age\">{{ godinePitanje }}</label>\r\n          <input type=\"number\" id=\"age\" v-model=\"form.age\" required>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"weight\">{{ weightPitanje }}</label>\r\n          <input type=\"number\" id=\"weight\" v-model=\"form.weight\" required>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"height\">{{ heightPitanje }}</label>\r\n          <input type=\"number\" id=\"height\" v-model=\"form.height\" required>\r\n        </div>\r\n\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"gender\">{{ genderPitanje }}</label>\r\n          <select id=\"gender\" v-model=\"form.gender\" required>\r\n            <option value=\"muski\">Muski</option>\r\n            <option value=\"zenski\">Zenski</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"fitnessLevel\">{{ fitnessLevelPitanje }}</label>\r\n          <select id=\"fitnessLevel\" v-model=\"form.fitnessLevel\" required>\r\n            <option value=\"početnik\">Početnik (0-1 godine aktivnog treniranja)</option>\r\n            <option value=\"srednji\">Srednji (2-5 godine aktivnog treninga)</option>\r\n            <option value=\"napredni\">Napredni (5+ godina aktivnog treniranja)</option>\r\n          </select>\r\n        </div>\r\n\r\n        <button type=\"button\" @click=\"nextStep\">Dalje</button>\r\n      </div>\r\n\r\n      <!-- Druga faza pitanja -->\r\n      <div v-if=\"currentStep === 2\">\r\n        <div class=\"form-group\">\r\n          <label for=\"goals\">{{ goalsPitanje }}</label>\r\n          <input type=\"text\" id=\"goals\" v-model=\"form.goals\" required>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"trainingFrequency\">{{ trainingFrequencyPitanje }}</label>\r\n          <input type=\"number\" id=\"trainingFrequency\" v-model=\"form.trainingFrequency\" required>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"trainingDuration\">{{ trainingDurationPitanje }}</label>\r\n          <input type=\"range\" id=\"trainingDuration\" v-model=\"form.trainingDuration\" min=\"30\" max=\"180\" step=\"10\">\r\n          <span>{{ form.trainingDuration }} minuta</span>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"trainingPreference\">{{ trainingPreferencePitanje }}</label>\r\n          <input type=\"text\" id=\"trainingPreference\" v-model=\"form.trainingPreference\" required>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"favoriteExercises\">{{ favoriteExercisesPitanje }}</label>\r\n          <input type=\"text\" id=\"favoriteExercises\" v-model=\"form.favoriteExercises\" required>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"dislikedExercises\">{{ dislikedExercisesPitanje }}</label>\r\n          <input type=\"text\" id=\"dislikedExercises\" v-model=\"form.dislikedExercises\" required>\r\n        </div>\r\n\r\n        <button type=\"button\" @click=\"nextStep\">Dalje</button>\r\n      </div>\r\n\r\n      <!-- Treća faza pitanja -->\r\n      <div v-if=\"currentStep === 3\">\r\n        <div class=\"form-group\">\r\n          <label for=\"injuries\">{{ injuriesPitanje }}</label>\r\n          <input type=\"text\" id=\"injuries\" v-model=\"form.injuries\" required>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"favoriteBodyParts\">{{ favoriteBodyPartsPitanje }}</label>\r\n          <input type=\"text\" id=\"favoriteBodyParts\" v-model=\"form.favoriteBodyParts\" required>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"includeCardio\">{{ includeCardioPitanje }}</label>\r\n          <input type=\"text\" id=\"includeCardio\" v-model=\"form.includeCardio\" required>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"otherFactors\">{{ otherFactorsPitanje }}</label>\r\n          <input type=\"text\" id=\"otherFactors\" v-model=\"form.otherFactors\" required>\r\n        </div>\r\n\r\n        <button type=\"submit\">Pošalji</button>\r\n      </div>\r\n    </form>\r\n    <div v-if=\"currentStep === 4\">\r\n      <div>\r\n        <p :style=\"{ 'white-space': 'pre-line' }\">{{ plan }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { posaljiPitanje } from '../services/ChatGPTService';\r\n\r\nconst currentStep = ref(1);\r\n\r\nconst genderPitanje = ref('Kog ste\\n pola?');\r\nconst godinePitanje = ref(\"Koliko godina imate?\");\r\nconst fitnessLevelPitanje = ref(\"Koji je vaš trenutni nivo fizičke spremnosti (početnik, srednji, napredni)?\");\r\nconst goalsPitanje = ref(\"Koji su vaši glavni ciljevi vezani za trening (snaga, povecanje misicne mase, postizanje zategnutosti, kondicija, mršavljenje, fleksibilnost)?\");\r\nconst trainingFrequencyPitanje = ref(\"Koliko puta nedeljno možete trenirati?\");\r\nconst trainingDurationPitanje = ref(\"Koliko bi voleli da vam trening traje vremenski?\");\r\nconst trainingPreferencePitanje = ref(\"Da li imate preferenciju za određeni tip treninga (snaga, kondicija, HIIT, bodybuilding)?\");\r\nconst favoriteExercisesPitanje = ref(\"Imate li omiljene vežbe koje volite?\");\r\nconst dislikedExercisesPitanje = ref(\"Imate li vežbe koje ne volite?\");\r\nconst injuriesPitanje = ref(\"Da li imate povrede ili ograničenja koje treba uzeti u obzir?\");\r\nconst favoriteBodyPartsPitanje = ref(\"Imate li omiljene partije tela koje želite da razvijete?\");\r\nconst includeCardioPitanje = ref(\"Da li želite da uključite kardio trening u plan? Ako da, koliko često?\");\r\nconst weightPitanje = ref(\"Koja je vaša trenutna telesna težina?\");\r\nconst heightPitanje = ref(\"Koja je vaša visina?\");\r\nconst otherFactorsPitanje = ref(\"Postoji li neki drugi faktor koji smatrate bitnim za kreiranje plana?\");\r\n\r\nconst form = ref({\r\n  age: '',\r\n  gender: '',\r\n  fitnessLevel: '',\r\n  goals: '',\r\n  trainingFrequency: '',\r\n  trainingPreference: '',\r\n  trainingDuration: '',\r\n  favoriteExercises: '',\r\n  dislikedExercises: '',\r\n  injuries: '',\r\n  favoriteBodyParts: '',\r\n  includeCardio: '',\r\n  weight: '',\r\n  height: '',\r\n  otherFactors: ''\r\n});\r\n\r\nconst nextStep = () => {\r\n  if (currentStep.value < 4) {\r\n    currentStep.value++;\r\n  }/*\r\n  else {\r\n    if(currentStep.value === 3) {\r\n    currentStep.value++;\r\n    }\r\n  }*/\r\n};\r\n\r\n\r\nlet prompt = ref('');\r\n\r\nconst createPrompt = () => {\r\n  prompt.value = `\r\n  Zanemari sve sto sam ti do sad slao.\r\n  Na osnovu sledećih korisničkih unosa, kreiraj detaljan i personalizovan plan treninga na srpskom jeziku (ekavici). Plan treba da se temelji na najnovijim saznanjima iz oblasti treninga za hipertrofiju, snagu, mobilnost i opšte kondicije, uzimajući u obzir relevantnu svetsku literaturu kao što su NSCA, ACSM i druge priznate izvore iz nauke o vežbanju. U planu primeni principe progresivnog opterećenja, funkcionalnog treninga i poboljšanja mobilnosti, uz prilagođavanje volumena, intenziteta i izbora vežbi prema individualnim korisničkim odgovorima.\r\n\r\nPlan treba da uključuje detaljna uputstva za svaku vežbu, preporuke za odmor između serija, protokole za zagrevanje, kao i savete za oporavak, uzimajući u obzir nivo iskustva korisnika, ciljeve i eventualna ograničenja. Trening program treba da adresira različite podele treninga (npr. push-pull-legs, upper-lower ili full-body), i da bude prilagođen za optimalne performanse, dugovečnost i prevenciju povreda. Takođe, dodaj i nutricionističke smernice koje će podržati korisnikove ciljeve, uzimajući u obzir potrebe za makronutrijentima i vremensku usklađenost obroka s nivoom aktivnosti. \r\n  Forma: ${godinePitanje.value} ${form.value.age}, \r\n         ${fitnessLevelPitanje.value} ${form.value.fitnessLevel}( od odvoga zavisi koliko ce kompleksan plan da bude ), \r\n         ${goalsPitanje.value} ${form.value.goals}, \r\n         ${genderPitanje.value} ${form.value.gender} (u zavisnosti od ovog odgovora modelujes plan tako da kod zena veci deo bude na donjem delu tela(znaci za zene uglavnom biras Upper Lower split sa tim da Lower ima fokus na gluteus(hip thrust da bude prva i najbitnija vezba)), a za muskarce se na leg day-u vise fokusiras na cucanj i po potrebi mrtvo dizanje, bez hip thrusta kod muskaraca) , \r\n         ${trainingFrequencyPitanje.value} ${form.value.trainingFrequency} (od ovoga zavisi koliko ces mu dana za trening dati npr. ako stavi 4 stavices Day1 Day2 Day3 i Day4. Takodje, u zavisnosti od ovoga biras i strukturu plana, da li ce biti Push Pull Legs(3 dana), Upper Lower (4 dana), Arnold Split(4 dana), grudi i triceps ledja i biceps noge ramena ruke i grudi ledja(5) , full Body itd. ) , \r\n         ${trainingDurationPitanje.value} ${form.value.trainingDuration} (u zavisnosti od ovog odgovora biras broj vezbi i serija koje treba da se odrade u treningu. U to vreme ne racunas zagrevanje vec samo vezbe. Izracunaj otprilike koliko vremena bi mi trebalo za koju vezbu i tako proceni koliko treba vezbi i serija. Za teze vezbe kao sto su Cucanj, Bench, Mrtvo itd stavljas vece pauze i vise vremena, a za one lakse vezbe stavljas manje pauze.), \r\n         ${trainingPreferencePitanje.value} ${form.value.trainingPreference}, \r\n         ${favoriteExercisesPitanje.value} ${form.value.favoriteExercises} (ubaci ovu/e vezbu/e prilikom kreiranja plana) ,   \r\n         ${dislikedExercisesPitanje.value} ${form.value.dislikedExercises} (izbaci ovu/e vezbu/e prilikom kreiranja plana) , \r\n         ${injuriesPitanje.value} ${form.value.injuries} (pripazi na vezbe i pokrete koji ukljucuju povredjen deo ukoliko ga ima) ,   \r\n         ${favoriteBodyPartsPitanje.value} ${form.value.favoriteBodyParts} (prilikom kreiranja baci fokus nadeo koji korisnik zeli najvise da razvije ukoliko ga ima) , \r\n         ${includeCardioPitanje.value} ${form.value.includeCardio}, \r\n         ${weightPitanje.value} ${form.value.weight}, \r\n         ${heightPitanje.value} ${form.value.height}, \r\n         ${otherFactorsPitanje.value} ${form.value.otherFactors}.\\n\r\n         Kraj forme.\\n\r\n         Takodje, na osnovu tezine, visine, spremnosti i aktivnosti, proceni koliko bi osoba trebala da unosi kalorija i proteina i daj joj smernice i preporuke vezane za ishranu. \r\n         Odgovor treba da mi podelis na tri sekcije i ne smes nista vise da ubacujes van toga. Prva sekcija je objasnjenje plana, Druga sam plan sa vezbama i brojevima serija i ponavlajanja (u formi Dan1:Vezba1-BrSerijaxBrPonavljanja...) i treca smernice za ishranu, ne treba da mi vracas opet formu ili nesto slicno, vec samo da das odgovor. Nemoj da stavljas brojeve 1 2 i 3 za delove vec ih samo odvoj po pasusima.\r\n         NEMOJ da pises prva sekcija, druga sekcija, treca sekcija vec samo razdvoji po pasusima.\r\n         Prilikom kreiranja plana postuj ovih 50 pravila:\"1-10: Razumevanje ciljeva klijenta\r\nDefiniši ciljeve klijenta: Jasno identifikuj da li je cilj mršavljenje, povećanje snage, hipertrofija, poboljšanje kondicije, ili kombinacija više ciljeva.\r\nPostavi realna očekivanja: Uveri se da ciljevi mogu biti postignuti u razumljivom vremenskom okviru, izbegavaj nerealna obećanja.\r\nPraćenje napretka: Redovno meri rezultate kako bi klijent video napredak i prilagođavao program.\r\nUpoznaj klijentovu trenutnu kondiciju: Procenom početne kondicije možeš prilagoditi trening plan prema potrebama klijenta.\r\nRazlikuj početnike i iskusne vežbače: Početnici imaju bržu adaptaciju i mogu izdržati manje volumena, dok iskusniji trebaju složenije programe.\r\nRazmatraj povrede i ograničenja: Prilagodi vežbe kako bi izbegao povrede, a istovremeno omogućio napredak.\r\nPostavi male ciljeve na putu ka većem cilju: Koraci ka glavnom cilju motivišu klijente i održavaju ih fokusiranim.\r\nOsobeni stil treniranja: Razumi šta klijentu više odgovara – rad s tegovima, vežbe snage, kardio – i prilagodi program njegovim preferencijama.\r\nMentalna priprema je ključna: Podstakni klijente da razviju pozitivan stav i izgrade samopouzdanje.\r\nFokus na dugoročnu održivost: Kreiraj plan koji se može dugoročno pratiti, a ne ekstremne kratkoročne programe.\r\n11-20: Osnove periodizacije i treninga\r\nKoristi periodizaciju: Deljenje trening programa u cikluse (snaga, hipertrofija, izdržljivost) omogućava kontinuiran napredak i izbegava stagnaciju.\r\nLinearno povećanje opterećenja: Postepeno povećavaj težine ili broj ponavljanja, kako bi izbegao stagnaciju.\r\nUključi različite tipove treninga: Kombinuj snagu, hipertrofiju, i kondiciju u različitim fazama treninga.\r\nNe zaboravi na deload faze: U program ubaci lakše nedelje da bi se telo oporavilo i sprečilo pretreniranost.\r\nFokus na osnovne vežbe: Složenije vežbe, kao što su čučanj, mrtvo dizanje i benč pres, aktiviraju više mišićnih grupa i daju bolje rezultate.\r\nRaznovrsnost vežbi: Promeni vežbe svakih nekoliko nedelja kako bi izazvao telo i sprečio dosadu.\r\nTreniraj specifičnost cilja: Ako je cilj snaga, naglasi vežbe sa težim opterećenjima; ako je cilj hipertrofija, fokusiraj se na vežbe sa višim ponavljanjima.\r\nPrilagodi volumen i intenzitet: Na osnovu iskustva klijenta, povećaj ili smanji broj serija i težinu.\r\nPrati progresivne principe treninga: Bez progresivnog povećanja opterećenja neće biti napretka.\r\nNemoj preterivati sa kardio treningom ako je cilj hipertrofija: Previše kardio treninga može usporiti rast mišića.\r\n21-30: Praktični treninzi i tehnike\r\nTehnika pre težine: Uvek se pobrini da klijent prvo savlada tehniku pre nego što poveća težinu.\r\nIspravno postavi telo: Držanje je ključno za sve vežbe kako bi se izbegle povrede.\r\nKreiraj balans između snage i izdržljivosti: Uvek uključi i vežbe snage i vežbe izdržljivosti.\r\nKoristi super setove za efikasnost: Kombinuj vežbe koje ciljaju različite mišićne grupe kako bi povećao intenzitet bez povećanja vremena treninga.\r\nKoristi povremeno vežbe na mašinama: Mašine mogu pomoći u izolaciji mišićnih grupa i obezbediti sigurniji pokret.\r\nTempo vežbanja: Vreme pod naponom (tempo) igra ključnu ulogu u razvoju mišića – usporavanje ekscentrične faze vežbanja može povećati hipertrofiju.\r\nDajte prioritet slabostima: Uvek prvo radite na slabijim delovima tela kako biste izbegli neravnoteže.\r\nDinamika zagrevanja i hlađenja: Dobro zagrevanje smanjuje rizik od povrede, dok hlađenje pomaže oporavku.\r\nPrimenjuj pravilne intervale odmora: Prilagodi odmore između serija – kraći odmori za izdržljivost, duži za snagu.\r\nPrati ravnotežu mišića: Uvezi i prednje i zadnje mišiće, kako bi održao ravnotežu i sprečio povrede.\r\n31-40: Planiranje ishrane i oporavak\r\nPrati unos kalorija: Uveri se da ishrana klijenta podržava ciljeve treninga.\r\nOdržavaj balans makronutrijenata: Unos proteina, ugljenih hidrata i masti mora biti u skladu sa ciljevima klijenta.\r\nUnos proteina: Preporuči dovoljno proteina (oko 1.6-2.2g po kilogramu telesne mase) za rast mišića.\r\nVažnost hidratacije: Uvek naglasi važnost hidratacije tokom treninga.\r\nPraćenje unosa hrane: Uči klijente da beleže šta jedu kako bi lakše prilagodili plan ishrane.\r\nDani odmora: Oporavak je ključan za rast mišića, stoga uvek planiraj dovoljno dana odmora.\r\nSpavanje je ključno: Optimalno vreme za spavanje je važno za oporavak i rezultate.\r\nSuplementacija kao dodatak, a ne zamena: Kreatin, proteini i multivitamini mogu pomoći, ali nisu zamena za dobru ishranu.\r\nPlaniraj kalorijski unos prema cilju: Za mršavljenje, stvori deficit, a za hipertrofiju blag kalorijski suficit.\r\nPravilno tempiranje obroka: Unos ugljenih hidrata i proteina pre i posle treninga može optimizovati performanse i oporavak.\r\n41-50: Personalizacija plana i motivacija\r\nPrilagodi plan prema ličnosti klijenta: Neki klijenti vole strukturirane planove, dok drugi preferiraju veću fleksibilnost.\r\nMotiviši klijente postavljanjem izazova: Dodaj male izazove kako bi motivisao klijente i održao njihov entuzijazam.\r\nPraćenje motivacije: Prati emocionalno stanje klijenta i prilagodi trening kada uočiš da je potrebno.\r\nFokusiraj se na dugoročnu progresiju: Program treba da bude održiv i dugoročan, a ne ekstreman.\r\nOdržavaj varijaciju vežbi: Menjanje vežbi pomaže u sprečavanju dosade i osigurava napredak.\r\nUključi povremene testove snage i izdržljivosti: Ovi testovi pokazuju klijentu napredak i motivišu ga da nastavi.\r\nKomuniciraj redovno s klijentom: Redovni razgovori mogu pomoći u razumevanju njihovih osećanja o treningu i učiniti program efikasnijim.\r\nUključi dane za povremeno testiranje limita: Pomozi klijentu da vidi koliko je napredovao.\r\nPazi na pretreniranost: Ako klijent postane previše iscrpljen, smanji intenzitet ili obim kako bi se telo oporavilo.\r\nPrilagođavaj program kako klijent napreduje: Stalno evaluiraj i menjaš plan u skladu s klijentovim napretkom i promenama u ciljevima.\"\r\n         `//Plan daj u formatu stringa, tako da se lepo ispise na ekranu.To znaci da treba da koristis backslash+n (samo spojeno) na kraju svakog paragrafa.\r\n        \r\n         //`//OBAVEZNO:Samo mi daj za odredjeni broj treninga nedeljno podeljeno u formatu Dan1:NazivVezbe-SerijaxPonavljanja; kraj dana oznaci sa '%'(npr. Day1:Squat-4x10;Lunges-3x12...%Day2:...) i nemoj nikakav dodatni tekst da dodajes. Obavezno daj odgovor u formatu koji je zatrazen van forme.`;\r\n\r\n  alert(prompt.value);\r\n};\r\n\r\nconst plan = ref('Plan is currently loading...');\r\n\r\nconst handleSubmit = () => {\r\nalert('Forma je poslata');\r\ncreatePrompt();\r\nposaljiPitanje(prompt.value).then(odgovor => {\r\n  alert(odgovor); // Prikazuje odgovor\r\n  plan.value = odgovor;\r\n});\r\nnextStep();\r\n};\r\n</script>\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}